   索引是对数据库表中一列或多列的值进行排序的一种结构，例如 employee 表的姓（name）列。
   如果要按姓查找特定职员，与必须搜索表中的所有行相比，索引会帮助您更快地获得该信息。  
   索引是一个单独的、物理的数据库结构，它是某个表中一列或若干列值的集合和相应的指向表中物理标识这些值的数据页的逻辑指针清单。 
   索引提供指向存储在表的指定列中的数据值的指针，然后根据您指定的排序顺序对这些指针排序。
   数据库使用索引的方式与您使用书籍中的索引的方式很相似：它搜索索引以找到特定值，然后顺指针找到包含该值的行。 
   在数据库关系图中，您可以在选定表的“索引/键”属性页中创建、编辑或删除每个索引类型。
   当保存索引所附加到的表，或保存该表所在的关系图时，索引将保存在数据库中。
   可以基于数据库表中的单列或多列创建索引。多列索引使您可以区分其中一列可能有相同值的行。
   如果经常同时搜索两列或多列或按两列或多列排序时，索引也很有帮助。
   例如，如果经常在同一查询中为姓和名两列设置判据，那么在这两列上创建多列索引将很有意义。   
   确定索引的有效性：   检查查询的 WHERE 和 JOIN 子句。在任一子句中包括的每一列都是索引可以选择的对象。   
   对新索引进行试验以检查它对运行查询性能的影响。   考虑已在表上创建的索引数量。最好避免在单个表上有很多索引。   
   检查已在表上创建的索引的定义。最好避免包含共享列的重叠索引。   
   检查某列中唯一数据值的数量，并将该数量与表中的行数进行比较。
   比较的结果就是该列的可选择性，这有助于确定该列是否适合建立索引，如果适合，确定索引的类型。

建立索引的优点：
  1.大大加快数据的检索速度;   
    2.创建唯一性索引，保证数据库表中每一行数据的唯一性;   
    3.加速表和表之间的连接;   
    4.在使用分组和排序子句进行数据检索时，可以显著减少查询中分组和排序的时间。

索引类型：
  根据数据库的功能，可以在数据库设计器中创建四种索引：唯一索引、非唯一索引、主键索引和聚集索引。 
  尽管唯一索引有助于定位信息，但为获得最佳性能结果，建议改用主键或唯一约束。  

唯一索引：   
唯一索引是不允许其中任何两行具有相同索引值的索引。   
当现有数据中存在重复的键值时，大多数数据库不允许将新创建的唯一索引与表一起保存。
数据库还可能防止添加将在表中创建重复键值的新数据。
例如，如果在 employee 表中职员的姓 (lname) 上创建了唯一索引，则任何两个员工都不能同姓。     

非唯一索引：   
非唯一索引是相对唯一索引，允许其中任何两行具有相同索引值的索引。   
当现有数据中存在重复的键值时，数据库是允许将新创建的索引与表一起保存。
这时数据库不能防止添加将在表中创建重复键值的新数据。     

主键索引：   
数据库表经常有一列或列组合，其值唯一标识表中的每一行。该列称为表的主键。   
在数据库关系图中为表定义主键将自动创建主键索引，主键索引是唯一索引的特定类型。
该索引要求主键中的每个值都唯一。当在查询中使用主键索引时，它还允许对数据的快速访问。 

聚集索引（也叫聚簇索引）：
在聚集索引中，表中行的物理顺序与键值的逻辑（索引）顺序相同。一个表只能包含一个聚集索引。   
如果某索引不是聚集索引，则表中行的物理顺序与键值的逻辑顺序不匹配。与非聚集索引相比，聚集索引通常提供更快的数据访问速度。
